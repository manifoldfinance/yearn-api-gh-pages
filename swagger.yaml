# open vault api 
openapi: "3.0.0"

info:
  title: Open Vaults API
  description: The Open Vaults API defines an HTTP(S) interface between Vaults, Strategies and "Brokers".
  license:
    name: SSPL-1.0
    url: http://www.spdx.org/sspl-1.0
  contact:
    name: Open Vaults Broker API
    url: https://www.y.finance./api 
    email: contact@iearn.finance 
  version: v0.1.0

servers:
  - url: http://${ORG_URL}.com
    description: endpoint 
  - url: http://localhost:3000
    description: mock endpoint 

paths:
  /v2/registry:
    get:
      summary: get the registry of Vaults that the Registry offers (this can send all total or only available to specific public key/auth scheme )
      tags:
        - Registry
      operationId: registry.get
      parameters:
        - $ref: '#/components/parameters/APIVersion'
      responses:
        '200':
          description: registry response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'

  /v2/vault_instances/{instance_id}:
    put:
      summary: Provision a Vault
      tags:
        - VaultsInstances
      operationId: VaultsInstance.provision
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: instance id of instance to provision
          required: true
          schema:
            type: string
        - name: accepts_incomplete
          in: query
          description: asynchronous operations supported
          schema:
            type: boolean
      requestBody:
        description: parameters for the requested Vaults instance provision
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultsInstanceProvisionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsInstanceProvision'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsInstanceProvision'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsInstanceAsyncOperation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    harvest:
      summary: Harvest a Vault Instance
      tags:
        - VaultsInstances
      operationId: VaultsInstance.update
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: Instance id of Vault to update and/or harvest 
          required: true
          schema:
            type: string
        - name: accepts_incomplete
          in: query
          description: asynchronous operations supported
          schema:
            type: boolean
      requestBody:
        description: parameters for the requested Vaults to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultsInstanceHarvestRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsInstanceAsyncOperation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delegate:
      summary: Delegate a Vault
      tags:
        - VaultDelegates
      operationId: VaultsInstance.delegate
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: id of vault being delelgated
          required: true
          schema:
            type: string
        - name: vault_id
          in: query
          description: id of the Vaults associated with the instance being deleted
          required: true
          schema:
            type: string
        - name: strategy_id
          in: query
          description: id of the Strategy associated with the instance being deleted
          required: true
          schema:
            type: string
        - name: accepts_incomplete
          in: query
          description: asynchronous deprovision supported
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get a Vaults Instance
      tags:
        - VaultsInstances
      operationId: VaultsInstance.get
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: instance id of instance to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsInstanceResource'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/vault_instances/{instance_id}/last_operation:
    get:
      summary: get the last requested operation state for Vaults instance
      tags:
        - VaultsInstances
      operationId: VaultsInstance.lastOperation.get
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - name: instance_id
          in: path
          description: instance id of instance to find last operation applied to it
          required: true
          schema:
            type: string
        - name: vault_id
          in: query
          description: id of the Vaults associated with the instance
          schema:
            type: string
        - name: strategy_id
          in: query
          description: id of the strategy associated with the vault
          schema:
            type: string
        - name: operation
          in: query
          description: a provided identifier for the operation
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastOperationResource'
          headers:
            Retry-After:
              description: Indicates when to retry the request
              required: false
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/vault_instances/{instance_id}/vault_strategy/{binding_id}/last_operation:
    put:
      summary: put the last requested operation state for Vaults binding
      tags:
        - VaultsStrategyOperation
      operationId: VaultsBinding.lastOperation.put
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - name: instance_id
          in: path
          description: instance id of vault to find last operation applied to it - controller 
          required: true
          schema:
            type: string
        - name: binding_id
          in: path
          description: binding id of Vaults binding to find last operation applied to it - the controller
          required: true
          schema:
            type: string
        - name: vault_id
          in: query
          description: id of the Vaults associated with a strategy
          schema:
            type: string
        - name: strategy_id
          in: query
          description: id of the strategy associated with the vault 
          schema:
            type: string
        - name: operation
          in: query
          description: a provided identifier for the operation
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastOperationResource'
          headers:
            Retry-After:
              description: Indicates when to retry the request
              required: false
              schema:
               type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v2/vault_instances/{instance_id}/vault_Strategy/{binding_id}:
    put:
      summary: generate a Vaults binding
      tags:
        - VaultsStrategy
      operationId: VaultsBinding.binding
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: instance id of instance to create a binding on
          required: true
          schema:
            type: string
        - name: binding_id
          in: path
          description: binding id of binding to create
          required: true
          schema:
            type: string
        - name: accepts_incomplete
          in: query
          description: asynchronous operations supported
          schema:
            type: boolean
      requestBody:
        description: parameters for the requested Vaults binding
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultsBindingRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsBinding'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsBinding'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: deprovision a Vaults binding
      tags:
        - VaultsStrategy
      operationId: VaultsBinding.unbinding
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: id of the instance associated with the binding being deleted
          required: true
          schema:
            type: string
        - name: binding_id
          in: path
          description: id of the binding being deleted
          required: true
          schema:
            type: string
        - name: vault_id
          in: query
          description: id of the Vaults associated with the instance for which a binding is being deleted
          required: true
          schema:
            type: string
        - name: strategy_id
          in: query
          description: id of the plan associated with the instance for which a binding is being deleted
          required: true
          schema:
            type: string
        - name: accepts_incomplete
          in: query
          description: asynchronous operations supported
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get a Vaults binding
      tags:
        - VaultsStrategy
      operationId: VaultsBinding.get
      parameters:
        - $ref: '#/components/parameters/APIVersion'
        - $ref: '#/components/parameters/OriginatingIdentity'
        - name: instance_id
          in: path
          description: instance id of instance associated with the binding
          required: true
          schema:
            type: string
        - name: binding_id
          in: path
          description: binding id of binding to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsBindingResource'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    APIVersion:
      name: X-Broker-API-Version
      in: header
      description: version number of the Vaults Broker API that the Platform will use
      required: true
      schema:
        type: string
        default: '2.13'

    OriginatingIdentity:
      name: X-Broker-API-Originating-Identity
      in: header
      description: identity of the user that initiated the request from the Platform
      schema:
        type: string

  schemas:
    Registry:
      type: object
      properties:
        Vaultss:
          type: array
          items:
            $ref: '#/components/schemas/Vaults'

    Vaults:
      type: object
      required:
        - name
        - id
        - description
        - bindable
        - plans
      properties:
        name:
          type: string
        id:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        requires:
          type: array
          items:
            type: string
            enum:
              - syslog_drain
              - route_forwarding
              - volume_mount
        bindable:
          type: boolean
        metadata:
          $ref: '#/components/schemas/Metadata'
        dashboard_client:
          $ref: '#/components/schemas/DashboardClient'
        plan_updateable:
          type: boolean
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'

    DashboardClient:
      type: object
      properties:
        id:
            type: string
        secret:
            type: string
        redirect_uri:
            type: string

    Plan:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        maintenance_info:
          $ref: '#/components/schemas/MaintenanceInfo'
        free:
          type: boolean
          default: true
        bindable:
          type: boolean
        schemas:
          $ref: '#/components/schemas/Schemas'

    Schemas:
      type: object
      properties:
        vault_instance:
          $ref: '#/components/schemas/VaultsInstanceSchema'
        vault_binding:
          $ref: '#/components/schemas/VaultsStrategychema'

    VaultsInstanceSchema:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/SchemaParameters'
        update:
          $ref: '#/components/schemas/SchemaParameters'

    VaultsStrategychema:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/SchemaParameters'

    SchemaParameters:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/JSONSchema'

    JSONSchema:
      $ref: 'http://json-schema.org/draft-04/schema'

    VaultsInstanceResource:
      type: object
      properties:
        vault_id:
          type: string
        strategy_id:
          type: string
        dashboard_url:
          type: string
        parameters:
          $ref: '#/components/schemas/Object'

    VaultsInstanceProvisionRequest:
      type: object
      required:
        - vault_id
        - strategy_id
        - organization_guid
        - space_guid
      properties:
        vault_id:
          type: string
        strategy_id:
          type: string
        context:
          $ref: '#/components/schemas/Context'
        organization_guid:
          type: string
          deprecated: true
        space_guid:
          type: string
          deprecated: true
        parameters:
          $ref: '#/components/schemas/Object'

    VaultsInstanceProvision:
      type: object
      properties:
        dashboard_url:
          type: string

    VaultsInstanceAsyncOperation:
      type: object
      properties:
        dashboard_url:
          type: string
        operation:
          type: string # could be a link object to last operation

    VaultsInstanceUpdateRequest:
      type: object
      required:
        - vault_id
      properties:
        context:
          $ref: '#/components/schemas/Context'
        vault_id:
          type: string
        strategy_id:
          type: string
        parameters:
          $ref: '#/components/schemas/Object'
        previous_values:
          $ref: '#/components/schemas/VaultsInstancePreviousValues'

    VaultsInstancePreviousValues:
      type: object
      properties:
        vault_id:
          type: string
          deprecated: true
        strategy_id:
          type: string
        organization_id:
          type: string
          deprecated: true
        space_id:
          type: string
          deprecated: true

    AsyncOperation:
      type: object
      properties:
        operation:
          type: string

    LastOperationResource:
      type: object
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - in progress
            - succeeded
            - failed
        description:
          type: string

    VaultsBindingResource:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Object'
        syslog_drain_url:
          type: string
        route_vault_url:
          type: string
        volume_mounts:
          type: array
          items:
            $ref: '#/components/schemas/VaultsBindingVolumeMount'
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/VaultsBindingEndpoint'
        parameters:
          $ref: '#/components/schemas/Object'

    VaultsBindingRequest:
      type: object
      required:
        - vault_id
        - strategy_id
      properties:
        context:
          $ref: '#/components/schemas/Context'
        vault_id:
          type: string
        strategy_id:
          type: string
        app_guid:
          type: string
          deprecated: true
        bind_resource:
          $ref: '#/components/schemas/VaultsBindingResouceObject'
        parameters:
          $ref: '#/components/schemas/Object'

    VaultsBindingResouceObject:
      type: object
      properties:
        app_guid:
          type: string
        route:
          type: string

    VaultsBinding:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Object'
        syslog_drain_url:
          type: string
        route_vault_url:
          type: string
        volume_mounts:
          type: array
          items:
            $ref: '#/components/schemas/VaultsBindingVolumeMount'
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/VaultsBindingEndpoint'

    VaultsBindingEndpoint:
      type: object
      required:
      - host
      - ports
      properties:
        host:
          type: string
        ports:
          type: array
          items:
            type: string
        protocol:
          type: string
          enum:
          - 'tcp'
          - 'udp'
          - 'all'
          default: 'tcp'

    VaultsBindingVolumeMount:
      type: object
      required:
        - driver
        - container_dir
        - mode
        - device_type
        - device
      properties:
        driver:
          type: string
        container_dir:
          type: string
        mode:
          type: string
          enum:
            - r
            - rw
        device_type:
          type: string
          enum:
            - shared
        device:
          $ref: '#/components/schemas/VaultsBindingVolumeMountDevice'

    VaultsBindingVolumeMountDevice:
      type: object
      required:
        - volume_id
      properties:
        volume_id:
          type: string
        mount_config:
          $ref: '#/components/schemas/Object'

    Context:
      description: "See [Context Conventions](https://github.com/${ORG}/${REPO}/blob/master/profile.md#context-object) for more details."
      type: object

    Metadata:
      description: "See [Vaults Metadata Conventions](https://github.com/${ORG}/${REPO}/blob/master/profile.md#Vaults-metadata) for more details."
      type: object

    MaintenanceInfo:
      type: object
      required:
        - version
      properties:
        version:
          type: string
        description:
          type: string

    Object:
      type: object

    Error:
      description: "See ${URL} for more details."
      type: object
      properties:
        error:
          type: string
        description:
          type: string

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []

externalDocs:
  description: The offical Open Vaults Broker API specification
  url: https://github.com/${ORG}/${REPO}/
